const initDatabase = require("./db");
const db = initDatabase(); // ‚Üê –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã

const baileys = require("@whiskeysockets/baileys");
const qrcode = require("qrcode-terminal");

const makeWASocket = baileys.default;
const { useMultiFileAuthState, fetchLatestBaileysVersion, makeInMemoryStore } =
  baileys;

const startBot = async () => {
  const { state, saveCreds } = await useMultiFileAuthState("auth");
  const { version } = await fetchLatestBaileysVersion();

  const sock = makeWASocket({
    version,
    auth: state,
  });

  sock.ev.on("creds.update", saveCreds);

  sock.ev.on("connection.update", ({ connection, qr }) => {
    if (qr) {
      console.log("–°–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥:");
      qrcode.generate(qr, { small: true });
    }

    if (connection === "open") {
      console.log("‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ WhatsApp!");
    }

    if (connection === "close") {
      console.log("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ");
    }
  });

  sock.ev.on("messages.upsert", async ({ messages, type }) => {
    if (type !== "notify") return;

    const msg = messages[0];
    const text =
      msg.message?.conversation || msg.message?.extendedTextMessage?.text;

    if (!text) {
      console.log("‚õî –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è");
      return;
    }

    const author = msg.pushName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π";
    const time = new Date().toLocaleTimeString();
    const created = new Date().toISOString();

    console.log(`üì• –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: [${time}] ${author}: "${text}"`);

    // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É information
    db.run(
      `INSERT INTO information (author, message, time, created) VALUES (?, ?, ?, ?)`,
      [author, text, time, created],
      (err) => {
        if (err) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –ë–î:", err.message);
        } else {
          console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î");
        }
      }
    );
  });
};

startBot();
